/* Base button styles */
.btn {
  position: relative;
  display: inline-block;
  padding: 5px var(--spacer-3);
  font-size: var(--body-font-size);
  font-weight: var(--font-weight-semibold);
  line-height: 20px;
  white-space: nowrap;
  vertical-align: middle;
  cursor: pointer;
  user-select: none;
  border: var(--border-width) var(--border-style);
  border-radius: var(--border-radius);
  appearance: none;
}

.btn:hover {
  text-decoration: none;
}

.btn:disabled,
.btn.disabled,
.btn[aria-disabled='true'] {
  cursor: default;
}

.btn:disabled .octicon,
.btn.disabled .octicon,
.btn[aria-disabled='true'] .octicon {
  color: inherit;
}

.btn i {
  font-style: normal;
  font-weight: var(--font-weight-semibold);
  opacity: 0.75;
}

.btn .octicon {
  margin-right: var(--spacer-1);
  color: var(--text-gray-light);
  vertical-align: text-bottom;
}

.btn .octicon:only-child {
  margin-right: 0;
}

.btn .Counter {
  margin-left: 2px;
  color: inherit;
  text-shadow: none;
  vertical-align: top;
  background-color: rgba(var(--black), 0.08);
}

.btn .dropdown-caret {
  margin-left: var(--spacer-1);
  opacity: 0.8;
}


/* Default button */
.btn {
  --bg-default: var(--bg-gray-light);
  --bg-hover: #f3f4f6;
  --bg-active: var(--bg-hover);
  --bg-disabled: var(--bg-default);
  color: var(--text-gray-dark);
  background-color: var(--bg-default);
  border-color: var(--border-color-button);
  box-shadow: var(--box-shadow), var(--box-shadow-highlight);
  transition: background-color 0.2s cubic-bezier(0.3, 0, 0.5, 1);
  /* Keep :focus after :disabled. Allows to see the focus ring even on disabled buttons */
}

.btn:hover,
.btn.hover,
[open]>.btn {
  background-color: var(--bg-hover);
  transition-duration: 0.1s;
}

.btn:active,
.btn.selected,
.btn[aria-selected='true'] {
  background-color: var(--bg-active);
  box-shadow: var(--box-shadow-inset);
  transition: none;
}

.btn:disabled,
.btn.disabled,
.btn[aria-disabled='true'] {
  color: var(--gray-400);
  background-color: var(--bg-disabled);
  border-color: var(--border-color-button);
}

.btn:focus,
.btn.focus {
  outline: 1px dotted transparent;
  outline-offset: 2px;
  box-shadow: var(--box-shadow-focus);
}



/* Primary button */

.btn-primary {
  --bg-default: #2ea44f;
  --bg-hover: #2c974b;
  --bg-active: var(--bg-hover);
  --bg-disabled: #94d3a2;
  --shadow: var(--green-900);
  --box-shadow: 0 1px 0 rgba(var(--black), 0.1),
    inset 0 1px 0 rgba(var(--white), 0.03);
  color: var(--text-white);
  background-color: var(--bg-default);
  border-color: rgba(var(--black), 0.15);
  box-shadow: var(--box-shadow);
}

.btn-primary:hover,
.btn-primary.hover,
[open]>.btn-primary {
  background-color: var(--bg-hover);
}

.btn-primary:active,
.btn-primary.selected,
.btn-primary[aria-selected='true'] {
  background-color: var(--bg-active);
  box-shadow: inset 0 1px 0 rgba(var(--shadow), 0.2);
}

.btn-primary:disabled,
.btn-primary.disabled,
.btn-primary[aria-disabled='true'] {
  color: rgba(var(--text-white), 0.8);
  background-color: var(--bg-disabled);
  border-color: rgba(var(--black), 0.1);
  box-shadow: var(--box-shadow);
}

.btn-primary:focus,
.btn-primary.focus {
  box-shadow: 0 0 0 3px rgba(var(--bg-default), 0.4);
}

.btn-primary .Counter {
  color: inherit;
  background-color: rgba(var(--bg-white), 0.2);
}

.btn-primary .octicon {
  color: rgba(var(--text-white), 0.8);
}


/* Danger button */
.btn-danger {
  color: var(--text-red);
  transition: none;
}

.btn-danger:hover,
[open]>.btn-danger {
  color: var(--text-white);
  background-color: var(--red-600);
  border-color: rgba(var(--black), 0.15);
  box-shadow: 0 1px 0 rgba(var(--black), 0.1), inset 0 1px 0 rgba(var(--white), 0.03);
}

.btn-danger:hover .Counter,
[open]>.btn-danger .Counter {
  background-color: rgba(var(--bg-white), 0.2);
}

.btn-danger:hover .octicon,
[open]>.btn-danger .octicon {
  color: inherit;
}

.btn-danger:active,
.btn-danger.selected,
.btn-danger[aria-selected='true'] {
  color: var(--text-white);
  background-color: var(--red-600);
  border-color: rgba(var(--black), 0.15);
  box-shadow: inset 0 1px 0 rgba(var(--red-900), 0.2);
}

.btn-danger:disabled,
.btn-danger.disabled,
.btn-danger[aria-disabled='true'] {
  color: rgba(var(--text-red), 0.5);
  background-color: var(--bg-gray-light);
  border-color: var(--border-color-button);
  box-shadow: var(--box-shadow), var(--box-shadow-highlight);
}

.btn-danger:disabled .Counter,
.btn-danger.disabled .Counter,
.btn-danger[aria-disabled='true'] .Counter {
  background-color: rgba(var(--text-red), 0.05);
}

.btn-danger:focus {
  box-shadow: 0 0 0 3px rgba(var(--red-600), 0.4);
}

.btn-danger .Counter {
  color: inherit;
  background-color: rgba(var(--text-red), 0.1);
}


/* Outline button */
.btn-outline {
  color: var(--blue-500);
  transition: none;
}

.btn-outline:hover,
[open]>.btn-outline {
  color: var(--text-white);
  background-color: var(--blue-500);
  border-color: rgba(var(--black), 0.15);
  box-shadow: 0 1px 0 rgba(var(--black), 0.1), inset 0 1px 0 rgba(var(--white), 0.03);
}

.btn-outline:hover .Counter,
[open]>.btn-outline .Counter {
  background-color: rgba(var(--bg-white), 0.2);
}

.btn-outline:hover .octicon,
[open]>.btn-outline .octicon {
  color: inherit;
}

.btn-outline:active,
.btn-outline.selected,
.btn-outline[aria-selected='true'] {
  color: var(--text-white);
  background-color: var(--blue-500);
  border-color: rgba(var(--black), 0.15);
  box-shadow: inset 0 1px 0 rgba(var(--blue-900), 0.2);
}

.btn-outline:disabled,
.btn-outline.disabled,
.btn-outline[aria-disabled='true'] {
  color: rgba(var(--blue-500), 0.5);
  background-color: var(--bg-gray-light);
  border-color: var(--border-color-button);
  box-shadow: var(--box-shadow), var(--box-shadow-highlight);
}

.btn-outline:disabled .Counter,
.btn-outline.disabled .Counter,
.btn-outline[aria-disabled='true'] .Counter {
  background-color: rgba(var(--blue-500), 0.05);
}

.btn-outline:focus {
  box-shadow: 0 0 0 3px rgba(var(--blue-500), 0.4);
}

.btn-outline .Counter {
  color: inherit;
  background-color: rgba(var(--blue-500), 0.1);
}



/* Solid buttons TODO: Deprecate? */

.btn-blue {
  color: var(--text-white);
  background-color: var(--blue-500);
  background-image: linear-gradient(-180deg,
      var(--blue-500) 0%,
      var(--blue-500) 90%);
}

.btn-blue:focus,
.btn-blue.focus {
  box-shadow: 0 0 0 0.2em rgba(var(--blue-500), 0.4);
}

.btn-blue:hover,
.btn-blue.hover {
  background-color: var(--blue-500);
  background-image: linear-gradient(-180deg,
      var(--blue-500) 0%,
      var(--blue-500) 90%);
  background-position: 0 -(var(--em-spacer-5));
  border-color: var(--black-fade-50);
}

.btn-blue:active,
.btn-blue.selected,
.btn-blue[aria-selected='true'],
[open]>.btn-blue {
  background-color: var(--blue-500);
  background-image: none;
  border-color: var(--black-fade-50);
  box-shadow: var(--btn-active-shadow);
}

.btn-blue:disabled,
.btn-blue.disabled,
.btn-blue[aria-disabled='true'] {
  color: rgba(var(--text-white), 0.75);
  background-color: var(--blue-500);
  background-image: none;
  border-color: var(--border-color-button);
  box-shadow: none;
}

.btn-blue .Counter {
  color: var(--blue-500);
  background-color: var(--white);
}

.btn-blue {
  color: var(--text-white);
  background-color: var(--blue-500);
  background-image: linear-gradient(-180deg,
      var(--blue-500) 0%,
      var(--blue-500) 90%);
}

.btn-blue:focus,
.btn-blue.focus {
  box-shadow: 0 0 0 0.2em rgba(var(--blue-500), 0.4);
}

.btn-blue:hover,
.btn-blue.hover {
  background-color: var(--blue-500);
  background-image: linear-gradient(-180deg,
      var(--blue-500) 0%,
      var(--blue-500) 90%);
  background-position: 0 -(var(--em-spacer-5));
  border-color: var(--black-fade-50);
}

.btn-blue:active,
.btn-blue.selected,
.btn-blue[aria-selected='true'],
[open]>.btn-blue {
  background-color: var(--blue-500);
  background-image: none;
  border-color: var(--black-fade-50);
  box-shadow: var(--btn-active-shadow);
}

.btn-blue:disabled,
.btn-blue.disabled,
.btn-blue[aria-disabled='true'] {
  color: rgba(var(--text-white), 0.75);
  background-color: var(--blue-500);
  background-image: none;
  border-color: var(--border-color-button);
  box-shadow: none;
}

.btn-blue .Counter {
  color: var(--blue-500);
  background-color: var(--white);
}

/* Sizes */
/* Tweak `line-height` to make them smaller. */
.btn-sm {
  padding: 3px 12px;
  font-size: var(--font-size-small);
  line-height: 20px;
}

.btn-sm .octicon {
  vertical-align: text-top;
}


/* Large button adds more padding around text. Use font-size utils to increase font-size.. e.g, <p class="text-gamma"><button class="btn btn-large btn-primary" type="button">Big green button</button></p> */
.btn-large {
  padding: var(--em-spacer-6) 1.5em;
  font-size: inherit;
  line-height: var(--lh-default);

  border-radius: 0.5em;
}

/* Full-width button */
/* These buttons expand to the full width of their parent container */
.btn-block {
  display: block;
  width: 100%;
  text-align: center;
}

/* Button group */
/* A button group is a series of buttons laid out next to each other, all part
of one visual button, but separated by rules to be separate. */

.BtnGroup {
  display: inline-block;
  vertical-align: middle;
}

.BtnGroup+.BtnGroup,
.BtnGroup+.btn {
  margin-left: var(--spacer-1);
}

.BtnGroup::before {
  display: table;
  content: '';
}

.BtnGroup::after {
  display: table;
  clear: both;
  content: '';
}

.BtnGroup-item {
  position: relative;
  float: left;
  border-right-width: 0;
  border-radius: 0;
}

.BtnGroup-item:first-child {
  border-top-left-radius: var(--border-radius);
  border-bottom-left-radius: var(--border-radius);
}

.BtnGroup-item:last-child {
  border-right-width: var(--border-width);
  border-top-right-radius: var(--border-radius);
  border-bottom-right-radius: var(--border-radius);
}

.BtnGroup-item.selected,
.BtnGroup-item[aria-selected='true'],
.BtnGroup-item:focus,
.BtnGroup-item:active,
.BtnGroup-item:hover {
  border-right-width: var(--border-width);
}

.BtnGroup-item.selected+.BtnGroup-item,
.BtnGroup-item.selected+.BtnGroup-parent .BtnGroup-item,
.BtnGroup-item[aria-selected='true']+.BtnGroup-item,
.BtnGroup-item[aria-selected='true']+.BtnGroup-parent .BtnGroup-item,
.BtnGroup-item:focus+.BtnGroup-item,
.BtnGroup-item:focus+.BtnGroup-parent .BtnGroup-item,
.BtnGroup-item:active+.BtnGroup-item,
.BtnGroup-item:active+.BtnGroup-parent .BtnGroup-item,
.BtnGroup-item:hover+.BtnGroup-item,
.BtnGroup-item:hover+.BtnGroup-parent .BtnGroup-item {
  border-left-width: 0;
}


.BtnGroup-parent {
  float: left;
}

.BtnGroup-parent:first-child .BtnGroup-item {
  border-top-left-radius: var(--border-radius);
  border-bottom-left-radius: var(--border-radius);
}

.BtnGroup-parent:last-child .BtnGroup-item {
  border-right-width: var(--border-width);
  border-top-right-radius: var(--border-radius);
  border-bottom-right-radius: var(--border-radius);
}

.BtnGroup-parent .BtnGroup-item {
  border-right-width: 0;
  border-radius: 0;
}

.BtnGroup-parent.selected .BtnGroup-item,
.BtnGroup-parent[aria-selected='true'] .BtnGroup-item,
.BtnGroup-parent:focus .BtnGroup-item,
.BtnGroup-parent:active .BtnGroup-item,
.BtnGroup-parent:hover .BtnGroup-item {
  border-right-width: var(--border-width);
}

.BtnGroup-parent.selected+.BtnGroup-item,
.BtnGroup-parent.selected+.BtnGroup-parent .BtnGroup-item,
.BtnGroup-parent[aria-selected='true']+.BtnGroup-item,
.BtnGroup-parent[aria-selected='true']+.BtnGroup-parent .BtnGroup-item,
.BtnGroup-parent:focus+.BtnGroup-item,
.BtnGroup-parent:focus+.BtnGroup-parent .BtnGroup-item,
.BtnGroup-parent:active+.BtnGroup-item,
.BtnGroup-parent:active+.BtnGroup-parent .BtnGroup-item,
.BtnGroup-parent:hover+.BtnGroup-item,
.BtnGroup-parent:hover+.BtnGroup-parent .BtnGroup-item {
  border-left-width: 0;
}


/* ensure that the focus ring sits above the adjacent buttons */
.BtnGroup-item:focus,
.BtnGroup-item:active,
.BtnGroup-parent:focus,
.BtnGroup-parent:active {
  z-index: 1;
}

/* Link-like buttons */
/* This class is for styling <button> and <input> elements to look like links */
.btn-link {
  display: inline-block;
  padding: 0;
  font-size: inherit;
  color: var(--text-blue);
  text-decoration: none;
  white-space: nowrap;
  cursor: pointer;
  user-select: none;
  background-color: transparent;
  border: 0;
  appearance: none;
}

.btn-link:hover {
  text-decoration: underline;
}

.btn-link:disabled,
.btn-link:disabled:hover,
.btn-link[aria-disabled='true'],
.btn-link[aria-disabled='true']:hover {
  color: rgba(var(--gray-600), 0.5);
  cursor: default;
}


/* Invisible button */
/* Typically used as a "cancel" button next to a .btn */
.btn-invisible {
  color: var(--text-blue);
  background-color: transparent;
  border: 0;
  border-radius: 0;
  box-shadow: none;
}

.btn-invisible:hover,
.btn-invisible:active,
.btn-invisible:focus,
.btn-invisible.selected,
.btn-invisible[aria-selected='true'],
.btn-invisible.zeroclipboard-is-hover,
.btn-invisible.zeroclipboard-is-active {
  color: var(--text-blue);
  background: none;
  outline: none;
  box-shadow: none;
}


/* Octicon button */
/* Icon-only buttons */
.btn-octicon {
  display: inline-block;
  padding: 5px;
  margin-left: 5px;
  line-height: var(--lh-condensed-ultra);
  color: var(--text-gray);
  vertical-align: middle;
  /* For `<button>` elements */
  background: transparent;
  border: 0;
}

.btn-octicon:hover {
  color: var(--text-blue);
}

.btn-octicon.disabled,
.btn-octicon[aria-disabled='true'] {
  color: var(--gray-400);
  cursor: default;
}

.btn-octicon.disabled:hover,
.btn-octicon[aria-disabled='true']:hover {
  color: var(--gray-400);
}


.btn-octicon-danger:hover {
  color: var(--text-red);
}

/* Close button */
/* Typically used with an octicon-x */
.close-button {
  padding: 0;
  background: transparent;
  border: 0;
  outline: none;
}

/* Hidden text button */
/* Use `.hidden-text-expander` to indicate and expand hidden text. */
.hidden-text-expander {
  display: block;
}

.hidden-text-expander.inline {
  position: relative;
  top: -1px;
  display: inline-block;
  margin-left: 5px;
  line-height: 0;
}

.hidden-text-expander a,
.ellipsis-expander {
  display: inline-block;
  height: 12px;
  padding: 0 5px 5px;
  font-size: var(--font-size-small);
  font-weight: var(--font-weight-bold);
  line-height: 6px;
  color: var(--gray-700);
  text-decoration: none;
  vertical-align: middle;
  background: var(--gray-300);
  border: 0;
  border-radius: 1px;
}

.hidden-text-expander a:hover,
.ellipsis-expander:hover {
  text-decoration: none;
  background-color: var(--gray-300);
}

.hidden-text-expander a:active,
.ellipsis-expander:active {
  color: var(--text-white);
  background-color: var(--blue-400);
}


/* Social button count
TODO: Deprecate? Use BtnGroup instead? */

.btn-with-count {
  float: left;
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.btn-with-count:focus {
  z-index: 1;
}

/* Social count bubble */
/* A container that is used for social bubbles counts. */

.social-count {
  position: relative;
  float: left;
  padding: 3px 12px;
  font-size: var(--font-size-small);
  font-weight: var(--font-weight-bold);
  line-height: 20px;
  color: var(--text-gray-dark);
  vertical-align: middle;
  background-color: var(--bg-white);
  border: var(--border-width) var(--border-style) var(--border-color-button);
  border-left: 0;
  border-top-right-radius: var(--border-radius);
  border-bottom-right-radius: var(--border-radius);
  box-shadow: var(--box-shadow), var(--box-shadow-highlight);
}

.social-count:hover,
.social-count:active {
  text-decoration: none;
}

.social-count:hover {
  color: var(--text-blue);
  cursor: pointer;
}

.social-count:focus {
  z-index: 1;
  outline: 0;
  box-shadow: var(--box-shadow-focus);
}
